version: "2"
services:
  app:
    build: ./app
    container_name: "appTweepy"
    links:
      - db
    ports:
      - "5000:5000"
    networks:
      - elastic

  db:
    image: mysql:5.7
    container_name: "dbTweepy"
    ports:
      - "32000:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./db:/docker-entrypoint-initdb.d/:ro
    networks:
      - elastic

  api:
    build:
      context: ClientTweepy
      dockerfile: ClientTweepy/Dockerfile
    container_name: net-container
    environment:
      - "DB_PORT=3306"
    restart: always
    ports:
      - 8088:80
    networks:
      - elastic

  front:
    build: ./clientfront
    volumes:
      - ./volumefront:/var/www/html
    container_name: react-container
    restart: always
    ports:
    - 80:3000
    depends_on:
    - db
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      #- bootstrap.memory_lock=true   #REMOVE
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#  - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  kib01:
    image: docker.elastic.co/kibana/kibana:7.9.0
    container_name: kib01
    ports:
    - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOST: http://elasticsearch:9200
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - elastic

  prometheus:
    image: prom/prometheus:v2.24.1
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - 9090:9090
    networks:
      - elastic

  grafana:
    image: grafana/grafana:7.2.1
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      - elastic

volumes:
  data01:
    driver: local

networks:
  elastic:
    driver: bridge
